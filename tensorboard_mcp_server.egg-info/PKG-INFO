Metadata-Version: 2.4
Name: tensorboard-mcp-server
Version: 1.0.0
Summary: TensorBoard Model Context Protocol (MCP) server for analyzing training runs
Home-page: https://github.com/your-org/tensorboard-mcp
Author: SAIL Team
Author-email: SAIL Team <sail@stanford.edu>
License: MIT
Project-URL: Homepage, https://github.com/your-org/tensorboard-mcp
Project-URL: Repository, https://github.com/your-org/tensorboard-mcp.git
Project-URL: Issues, https://github.com/your-org/tensorboard-mcp/issues
Project-URL: Documentation, https://github.com/your-org/tensorboard-mcp#readme
Keywords: tensorboard,mcp,model-context-protocol,machine-learning,ai
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: mcp>=0.1.0
Requires-Dist: tensorboard>=2.0.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: black>=22.0.0; extra == "dev"
Requires-Dist: isort>=5.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

TensorBoard MCP Server
======================

This directory provides a lightweight Python Model Context Protocol (MCP) server exposing common TensorBoard inspection tools. It is inspired by GeorgePearse/tensorboard-mcp and built with the Python `mcp` library's `FastMCP` helpers.

What it provides
----------------
- `list_runs(base_dir)`: discover run directories containing TF event files
- `list_tags(log_dir)`: list available tags grouped by type (scalars, images, histograms, audio)
- `get_latest_scalar(log_dir, tag)`: latest scalar value/step with timestamp
- `get_scalar_series(log_dir, tag, max_points=200)`: downsampled scalar time series data
- `summarize_run(log_dir)`: tag counts and latest scalar values for all metrics

## Status
âœ… **Tested and Working** - All functions operational as of 2024-09-14
- Successfully discovers 22+ training runs in project
- Retrieves metrics like train/loss, eval/action_mae, learning rates, etc.
- Handles downsampling for large time series
- Fixed bug in `summarize_run` for proper tag counting

## Installation

### Option 1: Install as Package (Recommended)
```bash
# Development install (editable)
pip install -e .mcp/tensorboard-mcp/

# Regular install
pip install .mcp/tensorboard-mcp/
```

### Option 2: Direct Usage
Use the standalone script directly:
```bash
python .mcp/tensorboard-mcp/tb_mcp.py
```

### Requirements
- Python 3.10+
- `mcp` (Model Context Protocol Python library)
- `tensorboard` or `tensorflow` (for the event accumulator)

Install dependencies:
```bash
pip install mcp tensorboard
```


## Usage

### After Package Installation
Once installed as a package, you can run the server in multiple ways:

```bash
# Using console script (after pip install)
tensorboard-mcp-server

# Using module (after pip install)
python -m tb_mcp_server
```

### Claude Code Configuration
Add to your `config.toml`:

**If installed as package:**
```toml
[mcp_servers.tensorboard]
command = "tensorboard-mcp-server"
```

**If using module directly:**
```toml
[mcp_servers.tensorboard]
command = "python"
args = ["-m", "tb_mcp_server"]
```

### Other MCP Client Configuration
For other MCP-compatible clients, use command array:
```json
["tensorboard-mcp-server"]
```
or
```json
["python", "-m", "tb_mcp_server"]
```
